<Activity mc:Ignorable="sap sap2010" x:Class="Lasttest_Main_1xFile" this:Lasttest_Main_1xFile.Runs="1" this:Lasttest_Main_1xFile.TimeInSeconds="1000000" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:s="clr-namespace:System;assembly=System.Private.CoreLib" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:si="clr-namespace:System.IO;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uta="clr-namespace:UiPath.Testing.Activities;assembly=UiPath.Testing.Activities" xmlns:utat="clr-namespace:UiPath.Testing.Activities.TestData;assembly=UiPath.Testing.Activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="Runs" Type="InArgument(x:String)" />
    <x:Property Name="TimeInSeconds" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1669.3333333333333,5614.666666666667</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Lasttest_Main_1xFile_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>UiPath.Testing.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>UiPath.Shared.Activities.Business</x:String>
      <x:String>UiPath.Core.Activities.Orchestrator</x:String>
      <x:String>UiPath.Testing.Activities.TestData</x:String>
      <x:String>UiPath.Testing.Enums</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Core</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Web.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.Testing</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence DisplayName="Test With Timeout" sap:VirtualizedContainerService.HintSize="721.3333333333334,5550" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Default="False" Name="takeScreenshotOnException" />
      <Variable x:TypeArguments="x:TimeSpan" Default="00:05:00" Name="duration" />
      <Variable x:TypeArguments="scg:Dictionary(x:String, x:Object)" Name="config" />
      <Variable x:TypeArguments="x:Int32" Name="counter" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Sequence DisplayName="... Given" sap:VirtualizedContainerService.HintSize="659.3333333333334,4617.333333333333" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEachFileX DisplayName="For Each File in Folder" Filter="*.json" Folder="Tests/Data" sap:VirtualizedContainerService.HintSize="597.3333333333334,462.6666666666667" sap2010:WorkflowViewState.IdRef="ForEachFileX_2" IncludeSubDirectories="True" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
        <ui:ForEachFileX.Body>
          <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
            <ActivityAction.Argument1>
              <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
            </ActivityAction.Argument1>
            <ActivityAction.Argument2>
              <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
            </ActivityAction.Argument2>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,192.66666666666666" sap2010:WorkflowViewState.IdRef="Sequence_14">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="388,82" sap2010:WorkflowViewState.IdRef="DeleteFileX_2" Path="[CurrentFile.FullName]" />
            </Sequence>
          </ActivityAction>
        </ui:ForEachFileX.Body>
      </ui:ForEachFileX>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Framework\InitAllSettings.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="597.3333333333334,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Framework\InitAllSettings.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_ConfigFile">Tests\Data\Config.xlsx</InArgument>
          <InArgument x:TypeArguments="s:String[]" x:Key="in_ConfigSheets">[{"Settings","Constants"}]</InArgument>
          <OutArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="out_Config">[config]</OutArgument>
        </ui:InvokeWorkflowFile.Arguments>
      </ui:InvokeWorkflowFile>
      <Assign sap:VirtualizedContainerService.HintSize="597.3333333333334,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_1">
        <Assign.To>
          <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
        </Assign.To>
        <Assign.Value>
          <InArgument x:TypeArguments="x:Int32">[Integer.Parse(Runs)]</InArgument>
        </Assign.Value>
      </Assign>
      <ui:InterruptibleWhile CurrentIndex="{x:Null}" DisplayName="While" sap:VirtualizedContainerService.HintSize="597.3333333333334,3723.3333333333335" sap2010:WorkflowViewState.IdRef="InterruptibleWhile_1">
        <ui:InterruptibleWhile.Body>
          <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="560.6666666666666,3552.6666666666665" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <Sequence.Variables>
              <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="newAddress" />
              <Variable x:TypeArguments="scg:Dictionary(x:String, x:String)" Name="oldAddress" />
              <Variable x:TypeArguments="x:String" Name="firstName" />
              <Variable x:TypeArguments="x:String" Name="lastName" />
              <Variable x:TypeArguments="s:DateTime" Name="birthday" />
              <Variable x:TypeArguments="x:String" Name="fileName" />
              <Variable x:TypeArguments="x:Decimal" Name="panr" />
              <Variable x:TypeArguments="x:String" Name="prnr" />
              <Variable x:TypeArguments="x:String" Name="title" />
              <Variable x:TypeArguments="x:String" Name="salutation" />
            </Sequence.Variables>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="498.6666666666667,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_2">
              <Assign.To>
                <OutArgument x:TypeArguments="x:Int32">[counter]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="x:Int32">[counter-1]</InArgument>
              </Assign.Value>
            </Assign>
            <If Condition="[new Random().Next(1,10)&lt;10]" sap:VirtualizedContainerService.HintSize="498.6666666666667,1399.3333333333333" sap2010:WorkflowViewState.IdRef="If_1">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="464.6666666666667,693.3333333333334" sap2010:WorkflowViewState.IdRef="Sequence_9">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <utat:Address AddressResult="[oldAddress]" City="&lt;Random City&gt;" Country="Germany" sap:VirtualizedContainerService.HintSize="422.6666666666667,197.33333333333334" sap2010:WorkflowViewState.IdRef="Address_2" />
                  <utat:Address AddressResult="[newAddress]" City="&lt;Random City&gt;" Country="Germany" sap:VirtualizedContainerService.HintSize="422.6666666666667,197.33333333333334" sap2010:WorkflowViewState.IdRef="Address_1" />
                  <ui:MultipleAssign DisplayName="Multiple Assign" sap:VirtualizedContainerService.HintSize="422.6666666666667,131.33333333333334" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
                    <ui:MultipleAssign.AssignOperations>
                      <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[oldAddress("Country")]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">Deutschland</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                        <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
                          <ui:AssignOperation.To>
                            <OutArgument x:TypeArguments="x:String">[newAddress("Country")]</OutArgument>
                          </ui:AssignOperation.To>
                          <ui:AssignOperation.Value>
                            <InArgument x:TypeArguments="x:String">Deutschland</InArgument>
                          </ui:AssignOperation.Value>
                        </ui:AssignOperation>
                      </scg:List>
                    </ui:MultipleAssign.AssignOperations>
                  </ui:MultipleAssign>
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap:VirtualizedContainerService.HintSize="376,522" sap2010:WorkflowViewState.IdRef="Sequence_10">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <utat:Address AddressResult="[oldAddress]" City="&lt;Random City&gt;" Country="&lt;Random Country&gt;" sap:VirtualizedContainerService.HintSize="334,197.33333333333334" sap2010:WorkflowViewState.IdRef="Address_3" />
                  <utat:Address AddressResult="[newAddress]" City="&lt;Random City&gt;" Country="&lt;Random Country&gt;" sap:VirtualizedContainerService.HintSize="334,197.33333333333334" sap2010:WorkflowViewState.IdRef="Address_4" />
                </Sequence>
              </If.Else>
            </If>
            <utat:GivenName DisplayName="Given Name" GivenNameResult="[firstName]" sap:VirtualizedContainerService.HintSize="498.6666666666667,92" sap2010:WorkflowViewState.IdRef="GivenName_1" />
            <utat:LastName DisplayName="Last Name" sap:VirtualizedContainerService.HintSize="498.6666666666667,92" sap2010:WorkflowViewState.IdRef="LastName_1" LastNameResult="[lastName]" />
            <utat:RandomDate DisplayName="Random Date" sap:VirtualizedContainerService.HintSize="498.6666666666667,197.33333333333334" sap2010:WorkflowViewState.IdRef="RandomDate_1" MaxDate="2000-01-01" MinDate="1900-01-01" Output="[birthday]" />
            <utat:RandomString Case="Mixed" DisplayName="Random String" sap:VirtualizedContainerService.HintSize="498.6666666666667,196.66666666666666" sap2010:WorkflowViewState.IdRef="RandomString_1" Length="30" Output="[fileName]" />
            <utat:RandomNumber Decimals="{x:Null}" DisplayName="Random Number" sap:VirtualizedContainerService.HintSize="498.6666666666667,197.33333333333334" sap2010:WorkflowViewState.IdRef="RandomNumber_1" Max="999" Min="100" Output="[panr]" />
            <Sequence DisplayName="generate PRNR" sap:VirtualizedContainerService.HintSize="498.6666666666667,84.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_11">
              <Sequence.Variables>
                <Variable x:TypeArguments="x:Decimal" Name="p1" />
                <Variable x:TypeArguments="x:String" Name="p2" />
                <Variable x:TypeArguments="x:Decimal" Name="p3" />
              </Sequence.Variables>
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <utat:RandomNumber Decimals="{x:Null}" DisplayName="Random Number" sap:VirtualizedContainerService.HintSize="434,197.33333333333334" sap2010:WorkflowViewState.IdRef="RandomNumber_2" Max="99999999" Min="10000000" Output="[p1]" />
              <utat:RandomString Case="UpperCase" DisplayName="Random String" sap:VirtualizedContainerService.HintSize="434,196.66666666666666" sap2010:WorkflowViewState.IdRef="RandomString_2" Length="1" Output="[p2]" />
              <utat:RandomNumber Decimals="{x:Null}" DisplayName="Random Number" sap:VirtualizedContainerService.HintSize="434,197.33333333333334" sap2010:WorkflowViewState.IdRef="RandomNumber_3" Max="99999" Min="10000" Output="[p3]" />
              <Assign sap:VirtualizedContainerService.HintSize="434,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_4">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:String">[prnr]</OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:String">[p1.ToString+p2+p3.ToString]</InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
            <utat:RandomValue DisplayName="Random Value" FilePath="Tests/Lasttest/Salutation.csv" sap:VirtualizedContainerService.HintSize="498.6666666666667,144.66666666666666" sap2010:WorkflowViewState.IdRef="RandomValue_4" Value="[salutation]" />
            <If Condition="[new Random().Next(1,10)&lt;5]" sap:VirtualizedContainerService.HintSize="498.6666666666667,416" sap2010:WorkflowViewState.IdRef="If_2">
              <If.Then>
                <Sequence sap:VirtualizedContainerService.HintSize="376,232" sap2010:WorkflowViewState.IdRef="Sequence_12">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <utat:RandomValue DisplayName="Random Value" FilePath="Tests/Lasttest/Title.csv" sap:VirtualizedContainerService.HintSize="334,144.66666666666666" sap2010:WorkflowViewState.IdRef="RandomValue_3" Value="[title]" />
                </Sequence>
              </If.Then>
              <If.Else>
                <Sequence sap2010:WorkflowViewState.IdRef="Sequence_13" />
              </If.Else>
            </If>
            <ui:WriteTextFile File="{x:Null}" DisplayName="Write Text File" FileName="[&quot;Tests/Data/Input/&quot;+fileName+&quot;.json&quot;]" sap:VirtualizedContainerService.HintSize="498.6666666666667,136.66666666666666" sap2010:WorkflowViewState.IdRef="WriteTextFile_1" Text="[&quot;{&#xD;&#xA;  'person': {&#xD;&#xA;    'salutation': '&quot;+salutation+&quot;',&#xD;&#xA;    'title': '&quot;+title+&quot;',&#xD;&#xA;    'firstName': '&quot;+firstName+&quot;',&#xD;&#xA;    'lastName': '&quot;+lastName+&quot;',&#xD;&#xA;    'birthday': '&quot;+birthday.ToString(&quot;dd.MM.yyyy&quot;)+&quot;'&#xD;&#xA;  },&#xD;&#xA;  'addressOld': {&#xD;&#xA;    'street': '&quot;+oldAddress(&quot;StreetName&quot;)+&quot;',&#xD;&#xA;    'houseNumber': '&quot;+oldAddress(&quot;StreetNumber&quot;)+&quot;',&#xD;&#xA;    'zipCode': '&quot;+oldAddress(&quot;PostalCode&quot;)+&quot;',&#xD;&#xA;    'city': '&quot;+oldAddress(&quot;City&quot;)+&quot;',&#xD;&#xA;    'country': '&quot;+oldAddress(&quot;Country&quot;)+&quot;'&#xD;&#xA;  },&#xD;&#xA;  'addressNew': {&#xD;&#xA;    'street': '&quot;+newAddress(&quot;StreetName&quot;)+&quot;',&#xD;&#xA;    'houseNumber': '&quot;+newAddress(&quot;StreetNumber&quot;)+&quot;',&#xD;&#xA;    'zipCode': '&quot;+newAddress(&quot;PostalCode&quot;)+&quot;',&#xD;&#xA;    'city': '&quot;+newAddress(&quot;City&quot;)+&quot;',&#xD;&#xA;    'country': '&quot;+newAddress(&quot;Country&quot;)+&quot;'&#xD;&#xA;  },&#xD;&#xA;  'panr': '&quot;+panr.ToString+&quot;',&#xD;&#xA;  'prnr': '&quot;+prnr+&quot;'&#xD;&#xA;}&quot;]" />
          </Sequence>
        </ui:InterruptibleWhile.Body>
        <ui:InterruptibleWhile.Condition>
          <VisualBasicValue x:TypeArguments="x:Boolean" ExpressionText="counter&gt;0" />
        </ui:InterruptibleWhile.Condition>
      </ui:InterruptibleWhile>
    </Sequence>
    <Assign sap:VirtualizedContainerService.HintSize="659.3333333333334,85.33333333333333" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:TimeSpan">[duration]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:TimeSpan">[TimeSpan.FromSeconds(Integer.Parse(TimeInSeconds))]</InArgument>
      </Assign.Value>
    </Assign>
    <TryCatch DisplayName="Execute" sap:VirtualizedContainerService.HintSize="659.3333333333334,512" sap2010:WorkflowViewState.IdRef="TryCatch_1">
      <TryCatch.Try>
        <ui:TimeoutScope DisplayName="Timed Test" sap:VirtualizedContainerService.HintSize="546,463.3333333333333" sap2010:WorkflowViewState.IdRef="TimeoutScope_1" ThrowExceptionAfter="[duration]" TimeoutMessage="[String.Format(&quot;Set timeout {0:hh\:mm\:ss} exceeded&quot;, duration)]">
          <ui:TimeoutScope.Body>
            <ActivityAction x:TypeArguments="Activity">
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="512,336.6666666666667" sap2010:WorkflowViewState.IdRef="Sequence_5">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <Sequence DisplayName="... When" sap:VirtualizedContainerService.HintSize="450,226" sap2010:WorkflowViewState.IdRef="Sequence_3">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Mocks\Main_mock.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="388,115.33333333333333" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Mocks\Main_mock.xaml">
                    <ui:InvokeWorkflowFile.Arguments>
                      <InArgument x:TypeArguments="scg:Dictionary(x:String, x:Object)" x:Key="in_Config">[config]</InArgument>
                    </ui:InvokeWorkflowFile.Arguments>
                  </ui:InvokeWorkflowFile>
                </Sequence>
              </Sequence>
            </ActivityAction>
          </ui:TimeoutScope.Body>
        </ui:TimeoutScope>
      </TryCatch.Try>
      <TryCatch.Catches>
        <Catch x:TypeArguments="s:Exception" sap:VirtualizedContainerService.HintSize="456,338.6666666666667" sap2010:WorkflowViewState.IdRef="Catch`1_1">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              <x:Boolean x:Key="IsPinned">False</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ActivityAction x:TypeArguments="s:Exception">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="s:Exception" Name="exception" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Handle Exception" sap:VirtualizedContainerService.HintSize="450,268" sap2010:WorkflowViewState.IdRef="Sequence_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <uta:VerifyExpression AlternativeVerificationTitle="{x:Null}" KeepScreenshots="{x:Null}" Result="{x:Null}" ScreenshotsPath="{x:Null}" ContinueOnFailure="True" DisplayName="Take Screenshot" Expression="[takeScreenshotOnException]" sap:VirtualizedContainerService.HintSize="388,92" sap2010:WorkflowViewState.IdRef="VerifyExpression_1" OutputMessageFormat="Failure encountered. Screenshot taken" TakeScreenshotInCaseOfFailingAssertion="False" TakeScreenshotInCaseOfSucceedingAssertion="[takeScreenshotOnException]" />
              <Rethrow DisplayName="Rethrow Exception" sap:VirtualizedContainerService.HintSize="388,25.333333333333332" sap2010:WorkflowViewState.IdRef="Rethrow_1" />
            </Sequence>
          </ActivityAction>
        </Catch>
      </TryCatch.Catches>
      <TryCatch.Finally>
        <ui:ForEachFileX DisplayName="For Each File in Folder" Filter="*.json" Folder="Tests/Data" sap:VirtualizedContainerService.HintSize="484,462.6666666666667" sap2010:WorkflowViewState.IdRef="ForEachFileX_1" IncludeSubDirectories="True" OrderBy="NameAscFirst" SkipFolderWithoutPermission="False">
          <ui:ForEachFileX.Body>
            <ActivityAction x:TypeArguments="si:FileInfo, x:Int32">
              <ActivityAction.Argument1>
                <DelegateInArgument x:TypeArguments="si:FileInfo" Name="CurrentFile" />
              </ActivityAction.Argument1>
              <ActivityAction.Argument2>
                <DelegateInArgument x:TypeArguments="x:Int32" Name="CurrentIndex" />
              </ActivityAction.Argument2>
              <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="450,192.66666666666666" sap2010:WorkflowViewState.IdRef="Sequence_7">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:DeleteFileX DisplayName="Delete File" sap:VirtualizedContainerService.HintSize="388,82" sap2010:WorkflowViewState.IdRef="DeleteFileX_1" Path="[CurrentFile.FullName]" />
              </Sequence>
            </ActivityAction>
          </ui:ForEachFileX.Body>
        </ui:ForEachFileX>
      </TryCatch.Finally>
    </TryCatch>
    <Sequence DisplayName="... Then" sap:VirtualizedContainerService.HintSize="659.3333333333334,104.66666666666667" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </Sequence>
  </Sequence>
</Activity>